<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 확장자를 이용해 패턴을 걸때는 /**/*.확장자 로 할 것 (Ant Pattern 규칙) -->
	<http pattern="/**/*.js" security="none" />
	<http pattern="/**/*.css" security="none" />
	<http pattern="/images/*" security="none" />


	<!-- 
		auto-config="true" 설정은
		<form-login />
		<http-basic />
		<logout> 이 자동설정됨을 의미한다.
		
		intercept-url의 순서는 중요하다. (구체적인 것을 먼저 명시)
		
		//Custom Tag name
		username-parameter, password-parameter
		
		//Request Login URL
		login-page="/login"
		
		//Success Login and Redirect Default URL
		//만약 권한이 필요한 페이지를 클릭했는데, 로그인이 되지 않아서 요청을 받았다면
		//인증성공 후 이전에 요청했던 URL로 이동한다.
		//default-target-url은 그런것들이 지정되어 있지 않을 경우, 즉 사용자가 로그인창을 요청했을 경우를 의미한다
		default-target-url="/main"
	-->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/admin/**" access="hasRole( 'admin' ) " />
		<intercept-url pattern="/login" access="isAnonymous()"/>
		<intercept-url pattern="/main" access="hasAnyRole( 'user', 'admin' )"/>
		<intercept-url pattern="/**" access="permitAll" />
		<form-login
			username-parameter="loginId"
			password-parameter="loginPw"
			login-page="/login"
			default-target-url="/main"
			authentication-failure-url="/login?failure=true"
			authentication-success-handler-ref="authenticationHandler"
		/>
		
		<logout
			logout-url="/logout"
			logout-success-url="/main"
			delete-cookies="JSESSIONID"
		/>
	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="customJdbcDaoImpl"/>
	</authentication-manager>

	<beans:bean id="customJdbcDaoImpl" class="dao.CustomJdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource"/>
		<beans:property name="rolePrefix" value=""/>
		<beans:property name="usersByUsernameQuery" value="SELECT id, password, name FROM tbl_member WHERE id=?"/>
		<beans:property name="authoritiesByUsernameQuery" value="SELECT role FROM tbl_member_role WHERE id = ?" />
		<beans:property name="enableGroups" value="false" />
	</beans:bean>

	<beans:bean id="authenticationHandler" class="support.AuthenticationHandler" />
	
</beans:beans>
